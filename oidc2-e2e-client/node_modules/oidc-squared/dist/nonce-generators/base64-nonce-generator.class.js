"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Base64NonceGenerator = void 0;
const nonce_generator_class_1 = require("./nonce-generator.class");
class Base64NonceGenerator extends nonce_generator_class_1.NonceGenerator {
    length;
    /**
     * Constructs a new Nonce Generator which generates random bytes and encodes them Base64.
     * @param length The number of random bytes to generate.
     */
    constructor(length) {
        if (!Number.isInteger(length)) {
            throw new Error('Length must be a an integer value!');
        }
        if (length <= 0) {
            throw new Error(`Length must be a positive number! Provided length: ${length}`);
        }
        super();
        this.length = length;
    }
    /**
     * Generates the configured number of random bytes and encodes them Base64.
     * @returns The generated nonce.
     */
    generate() {
        const data = crypto.getRandomValues(new Uint8Array(this.length));
        let str = '';
        for (let i = 0; i < data.length; i++) {
            str += String.fromCharCode(data[i]);
        }
        return (typeof window !== 'undefined') ? window.btoa(str) : Buffer.from(str).toString('base64');
    }
}
exports.Base64NonceGenerator = Base64NonceGenerator;
//# sourceMappingURL=base64-nonce-generator.class.js.map