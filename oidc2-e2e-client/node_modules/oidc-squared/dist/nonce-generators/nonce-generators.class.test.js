"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const base64_nonce_generator_class_1 = require("./base64-nonce-generator.class");
const custom_nonce_generator_class_1 = require("./custom-nonce-generator.class");
const nonce_generators_class_1 = require("./nonce-generators.class");
const uuid_nonce_generator_class_1 = require("./uuid-nonce-generator.class");
test('NonceGenerators.base64 returns a valid Base64NonceGenerator', () => {
    // Verify that NonceGneerators.base64() returns a Base64NonceGenerator instance.
    expect(nonce_generators_class_1.NonceGenerators.base64(16)).toBeInstanceOf(base64_nonce_generator_class_1.Base64NonceGenerator);
    // Verify that the returned Base64 Nonce Generator has the correct length.
    expect(nonce_generators_class_1.NonceGenerators.base64(16).length).toBe(16);
    // Verify that the returned Base64 Nonce Generator generates a valid Base64 string.
    expect(nonce_generators_class_1.NonceGenerators.base64(16).generate()).toMatch(new RegExp('^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'));
});
test('NonceGenerators.custom returns a valid CustomNonceGenerator', () => {
    // Verify that NonceGneerators.custom() returns a CustomNonceGenerator instance.
    expect(nonce_generators_class_1.NonceGenerators.custom(() => 'test')).toBeInstanceOf(custom_nonce_generator_class_1.CustomNonceGenerator);
    // Verify that the returned Custom Nonce Generator generates the correct value.
    expect(nonce_generators_class_1.NonceGenerators.custom(() => 'test').generate()).toBe('test');
});
test('NonceGenerators.uuid returns a valid UuidNonceGenerator', () => {
    // Verify that NonceGneerators.uuid() returns a UuidNonceGenerator instance.
    expect(nonce_generators_class_1.NonceGenerators.uuid()).toBeInstanceOf(uuid_nonce_generator_class_1.UuidNonceGenerator);
    // Verify that the returned UUID Nonce Generator generates a valid UUID string.
    expect(nonce_generators_class_1.NonceGenerators.uuid().generate()).toMatch(new RegExp('^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$'));
});
//# sourceMappingURL=nonce-generators.class.test.js.map