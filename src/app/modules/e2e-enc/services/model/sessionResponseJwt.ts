/**
 * Endpoint for establishing and maintaining an encrypted client-server session
 * This endpoint establishes an end-to-end encrypted client-server session after authenticating the client with its Id Certification Token (Client_ICT). After the successful exchange of DH parameters, the client can communicate with the server, upload, download or delete files on the server with all communication being encrypted on application layer.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * A JSON Web Token (JWT) which MUST - be signed with an asymmetric algorithm (`ES256`, `ES384`, `ES512`, `RS256`, `RS384`, `RS512`, or `EdDSA` allowed). Example: (`\"alg\": ES256`). - have the type `\"typ\": \"JWT\"` in the header. - contain the server's public key in the JWT header (`\"jwk\": <public-key>`). - have the server's ICT (that is provided from an RPKI) in `\"ict\": <ICT_Server>` - contain the server's calculated public DH parameters for the client: (`\"dh\": <public DH parameters in jwk format>`) - contain the fitting received stateID from the client in `\"state\"` - carry the DH encrypted sessionID in `\"sid\": enc(DH_secret,<sessionID>)` - be signed with the server's private key 
 */
export type SessionResponseJwt = string;